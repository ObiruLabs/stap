/*! stap 2015-12-07 */
"use strict";angular.module("stap").controller("donationCancelCtrl",function($scope,$http){function initialize(){var id=getParameterByName("a");$http.get("/actions/donationForm/donations/cancelStatus?customer="+id).then(function(response){$scope.form.init=!0,response.data.status===!1&&($scope.form.cancelled=!1)})["catch"](function(){$scope.form.init=!0})}function getParameterByName(name){name=name.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var regex=new RegExp("[\\?&]"+name+"=([^&#]*)"),results=regex.exec(location.search);return null===results?"":decodeURIComponent(results[1].replace(/\+/g," "))}function serialize(obj){var str=[];for(var p in obj)obj.hasOwnProperty(p)&&str.push(encodeURIComponent(p)+"="+encodeURIComponent(obj[p]));return str.join("&")}$scope.form={init:!1,cancelling:!1,cancelled:!0},initialize(),$scope.submit=function(){var id=getParameterByName("a"),request={method:"POST",url:"/actions/donationForm/donations/cancel",headers:{"Content-Type":"application/x-www-form-urlencoded"},data:serialize({customer:id})};$scope.form.cancelling=!0,$http(request).success(function(){location.reload(),$scope.form.cancelling=!1})["catch"](function(){alert("Unable to cancel your donation. Please try again or send us an email."),$scope.form.cancelling=!1})}}),angular.module("stap").controller("donationCtrl",function($scope,$http){function fakeData(){var firstName=faker.name.firstName(),lastName=faker.name.lastName();$scope.card.number="4242424242424242",$scope.card.expiration="0518",$scope.card.cvc="123",$scope.form.donorFirstName=firstName,$scope.form.donorLastName=lastName,$scope.form.donorEmail="rubiojan@gmail.com",$scope.form.donorZip=faker.address.zipCode(),$scope.form.behalfSelected=!0,$scope.form.behalfType="honor",$scope.form.behalfOtherType="",$scope.form.behalfName=faker.name.firstName()+" "+faker.name.lastName(),$scope.form.notifyType="email",$scope.form.notifyName=faker.name.firstName()+" "+faker.name.lastName(),$scope.form.notifyEmail="rubiojan@gmail.com",$scope.form.notifyAddress1=faker.address.streetAddress(),$scope.form.notifyAddress2="",$scope.form.notifyCity=faker.address.city(),$scope.form.notifyState=faker.address.stateAbbr(),$scope.form.notifyCountry="US",$scope.form.notifyZip=faker.address.zipCode(),$scope.form.amountType="custom",$scope.form.amountCustom="$"+_.random(5,25),$scope.form.chargeType="once"}function isStepComplete(step){var isComplete=!1;return 0===step&&(isComplete=$scope.donationAmount()>0),1===step&&(isComplete=isPaymentInfoComplete()&&isDedicationInfoComplete()&&isNotifyInfoComplete()),isComplete}function isPaymentInfoComplete(){var requiredFields=[$scope.form.donorFirstName,$scope.form.donorLastName,$scope.form.donorEmail,$scope.form.donorZip,$scope.card.number,$scope.card.expiration,$scope.card.cvc],requiredEmailFields=[$scope.form.donorEmail],allRequired=_.all(requiredFields,function(value){return $scope.requireField.validate(value)}),allEmailRequired=_.all(requiredEmailFields,function(value){return $scope.requireEmailField.validate(value)});return allRequired&&allEmailRequired}function isDedicationInfoComplete(){return $scope.form.behalfSelected?$scope.requireField.validate($scope.form.behalfName):!0}function isNotifyInfoComplete(){if("none"===$scope.form.notifyType)return!0;var addtionalRequires=!1;if("email"===$scope.form.notifyType)addtionalRequires=$scope.requireEmailField.validate($scope.form.notifyEmail);else if("letter"===$scope.form.notifyType){var addressFields=[$scope.form.notifyAddress1,$scope.form.notifyCity,$scope.form.notifyState,$scope.form.notifyZip];addtionalRequires=_.all(addressFields,function(value){return $scope.requireField.validate(value)})}return $scope.requireField.validate($scope.form.notifyName)&&addtionalRequires}function stripeCallback(status,response){$scope.$apply(function(){response.error?($scope.form.hasErrors=!0,$scope.errorMessage=response.error.message,$scope.form.submitting=!1):completeDonation(response.id)})}function completeDonation(token){var fields=["donorFirstName","donorLastName","donorEmail","donorZip","behalfType","behalfOtherType","behalfName","notifyType","notifyName","notifyEmail","notifyAddress1","notifyAddress2","notifyCity","notifyState","notifyCountry","notifyZip","chargeType"],form=_.pick($scope.form,fields),prefixed={};form.chargeAmount=$scope.donationAmount(),_.forOwn(form,function(value,key){prefixed["donation["+key+"]"]=value}),prefixed.action="donationForm/donations/donate",prefixed.stripeToken=token;var request={method:"POST",url:"/donation",headers:{"Content-Type":"application/x-www-form-urlencoded"},data:serialize(prefixed)};$http(request).then(function(response){"success"===response.data.status?($scope.jump("start"),$scope.gotoStep(2)):($scope.form.hasErrors=!0,$scope.errorMessage="Unable to process your donation. "+response.data.error.message)})["catch"](function(){$scope.form.hasErrors=!0,$scope.errorMessage="Unable to process your donation. Please try again after a few moments."})["finally"](function(){$scope.form.submitting=!1})}function serialize(obj){var str=[];for(var p in obj)obj.hasOwnProperty(p)&&str.push(encodeURIComponent(p)+"="+encodeURIComponent(obj[p]));return str.join("&")}$scope.card={},$scope.form={amountType:"",amountValue:0,amountCustom:void 0,behalfSelected:!1,notifyType:"none",donorFirstName:"",donorLastName:"",donorEmail:"",donorZip:"",behalfType:"none",behalfOtherType:"",behalfName:"",notifyName:"",notifyEmail:"",notifyAddress1:"",notifyAddress2:"",notifyCity:"",notifyState:"",notifyZip:"",notifyCountry:"US",chargeType:"once"},window.fakeData=function(){$scope.$apply(fakeData)};var currentStep=0;$scope.selectAmountOption=function(amount){$scope.form.amountType="option",$scope.form.amountValue=+amount,$scope.form.amountCustom=void 0},$scope.updateCustomAmount=function(){if(!_.isEmpty($scope.form.amountCustom)){var amount=$scope.form.amountCustom.match(/\d/g);$scope.form.amountType="custom",amount&&"0"===amount[0]&&amount.splice(0,1),_.isEmpty(amount)?($scope.form.amountCustom=void 0,$scope.form.amountType=void 0):$scope.form.amountCustom="$"+amount.join("")}},$scope.updateCardCvc=function(oldCvc){if(!_.isEmpty($scope.card.cvc)){var old=oldCvc.match(/\d/g),cvc=$scope.card.cvc.match(/\d/g);if(old&&cvc&&cvc.length<old.length)return;_.isEmpty(cvc)?$scope.card.cvc="":cvc.length>4?$scope.card.cvc=oldCvc:$scope.card.cvc=cvc.join("")}},$scope.updateBehalfSelection=function(){$scope.form.behalfSelected&&"none"===$scope.form.behalfType?$scope.form.behalfType="honor":$scope.form.behalfSelected||"none"===$scope.form.behalfType||($scope.form.behalfType="none",$scope.form.behalfName="",$scope.form.notifyType="none",$scope.form.notifyName="",$scope.form.notifyEmail="",$scope.form.notifyAddress1="",$scope.form.notifyAddress2="",$scope.form.notifyCity="",$scope.form.notifyState="",$scope.form.notifyZip="")},$scope.isStep=function(step){return currentStep===step},$scope.gotoStep=function(step){if(2!==currentStep){var validations=_.times(step,function(previousStep){return isStepComplete(previousStep)});_.all(validations)&&(currentStep=step)}},$scope.donationAmount=function(){var amount=0;if("option"===$scope.form.amountType&&(amount=$scope.form.amountValue),"custom"===$scope.form.amountType){var customAmount=($scope.form.amountCustom||"").match(/\d/g).join("");amount=+customAmount}return 100*amount},$scope.errorFieldLabel=function(validator,value,label){return $scope.form.submitted&&!validator.validate(value)?validator.failureLabel:label},$scope.errorField=function(validator,value){return $scope.form.submitted&&!validator.validate(value)},$scope.requireField={failureLabel:"Required",validate:function(value){return!_.isEmpty(value)}},$scope.requireEmailField={failureLabel:"Invalid email address",validate:function(value){var emailRegex=/\S+@\S+\.\S+/;return $scope.requireField.validate(value)&&emailRegex.test(value)}},$scope.submit=function(){if($scope.form.submitted=!0,!isStepComplete(1))return $scope.form.hasErrors=!0,void($scope.errorMessage="You are missing some required information. Please fill them out and try again.");if(!$scope.form.submitting){$scope.form.submitting=!0,$scope.form.hasErrors=!1,$scope.errorMessage="",$scope.form.chargeAmount=$scope.donationAmount(),Stripe.setPublishableKey($scope.stripePublishableKey);var expiry=$scope.card.expiration.split(""),cardNumber=$scope.card.number?$scope.card.number.replace(/\D+/g,""):"",cardExpiryMonth=+_.take(expiry,2).join(""),cardExpiryYear=+_.takeRight(expiry,2).join(""),cardCVC=$scope.card.cvc;Stripe.card.createToken({number:cardNumber,cvc:cardCVC,exp_month:cardExpiryMonth,exp_year:cardExpiryYear,name:$scope.form.donorFirstName+" "+$scope.form.donorLastName,address_zip:$scope.form.donorZip},stripeCallback)}},$scope.jump=function(h){var url=location.href;location.href="#"+h,history.replaceState(null,null,url)}}),angular.module("stap").controller("navigationCtrl",function($scope){}),angular.module("stap").constant("GOOGLE_STATIC_MAP","https://maps.googleapis.com/maps/api/staticmap?center=<%= coordinates %>&zoom=14&size=500x220&markers=size:mid%7Ccolor:0x777777%7C<%= coordinates %>&scale=1&key=AIzaSyDGcxPj2JOF7ViOZELFJ3hEbpGKnZbwpmU&style=saturation:-100").constant("GOOGLE_EXTERNAL_MAP","https://maps.google.com?daddr=<%= address %>").constant("METERS_TO_MILES",1609.344).controller("testingCtrl",function($scope,$timeout,GOOGLE_STATIC_MAP,GOOGLE_EXTERNAL_MAP,METERS_TO_MILES,Geocode){function searchCountiesNear(address){var source=new google.maps.LatLng(address.coordinates.latitude,address.coordinates.longitude),filtered=[];$scope.totalSearchLocations=0,_.forEach($scope.counties,function(county){var matchingLocations=_.filter(county.locations,function(location){var distance=google.maps.geometry.spherical.computeDistanceBetween(source,location.coordinates);return distance/METERS_TO_MILES<=$scope.searchRadius});_.isEmpty(matchingLocations)||(filtered.push({county:county.county,map:county.map,locations:matchingLocations}),$scope.totalSearchLocations+=matchingLocations.length)}),$scope.closestCounties=filtered,refreshMaps()}function setMap(counties){_.forEach(counties,function(county){_.forEach(county.locations,function(location){location.map=STATIC_MAP({coordinates:location.latitude+","+location.longitude}),location.externalMap=EXTERNAL_MAP({address:[location.address1,location.city,location.state,location.zip].join("+").replace(/\s+/g,"+")}),location.coordinates=new google.maps.LatLng(location.latitude,location.longitude)})})}function refreshMaps(){$timeout(function(){$("img").unveil(500)},0)}var STATIC_MAP=_.template(GOOGLE_STATIC_MAP),EXTERNAL_MAP=_.template(GOOGLE_EXTERNAL_MAP);$scope.withinRadius=[{label:"5 miles",value:5},{label:"10 miles",value:10},{label:"20 miles",value:20}],$scope.counties=[],$scope.searchPlace="",$scope.searchRadius=10,$scope.totalSearchLocations=0,$scope.searching=!1,$scope.search=function(){_.isEmpty($scope.searchPlace)||($scope.searching=!0,$scope.searchPlaceShort=$scope.searchPlace.split(",")[0]||$scope.searchPlace,Geocode.bestMatch($scope.searchPlace).then(searchCountiesNear))},$scope.clearSearch=function(){$scope.searchPlace="",$scope.closestCounties=$scope.counties,$scope.searching=!1,refreshMaps()},$scope.$watch("counties",function(){_.isEmpty($scope.counties)||(setMap($scope.counties),$scope.closestCounties=$scope.counties)})}),angular.module("stap").directive("googlePlace",function(){return{require:"ngModel",link:function(scope,element,attrs,model){var options={types:[],componentRestrictions:{}};scope.gPlace=new google.maps.places.Autocomplete(element[0],options),google.maps.event.addListener(scope.gPlace,"place_changed",function(){scope.$apply(function(){model.$setViewValue(element.val())})})}}}),angular.module("stap").directive("scrollToFixed",function($timeout){return{restrict:"A",link:function(scope,el){function calculateVisibility(){var scroll=$(window).scrollTop();!hidden&&scroll>140?($el.css({top:0}),hidden=!hidden):hidden&&140>=scroll&&($el.css({top:-130}),hidden=!hidden)}var $el=$(el),hidden=!1;$(window).scroll(_.debounce(calculateVisibility,30)),$timeout(calculateVisibility,20)}}}),angular.module("stap").constant("GOOGLE_GEOCODE","https://maps.googleapis.com/maps/api/geocode/json?address=<%= address %>&key=AIzaSyDGcxPj2JOF7ViOZELFJ3hEbpGKnZbwpmU").factory("Geocode",function($http,GOOGLE_GEOCODE){function bestMatch(address){return fromAddress(address).then(function(addresses){return addresses[0]})}function fromAddress(address){return $http.get(GEOCODE_URL({address:encodeURIComponent(address)})).then(function(response){return _.map(response.data.results,function(location){return{address:location.formatted_address,coordinates:{latitude:location.geometry.location.lat,longitude:location.geometry.location.lng}}})})}var GEOCODE_URL=_.template(GOOGLE_GEOCODE);return{bestMatch:bestMatch,fromAddress:fromAddress}});