{% extends "_layout" %}
{% set navPage = 'donation' %}
{% block content %}
%main#main-content{ ng: { controller: 'donationCtrl', init: "stripePublishableKey='{{ craft.stripeService.publishableKey() }}'" } }
    %section.section_background_donation.section_progress
        .section_background--overlay
        .testing--jumbotron.container-fluid
            .row
                .col-sm-6.col-sm-offset-3
                    %h1.section--title Make a Donation
                    %p Your generous donation will help us work towards creating a world where HIV transmission is rare and those who are HIV+ lead healthy lives.
                    %a#start
        .progress-steps
            .progress-steps--step.is-active{ ng: { click: 'gotoStep(0)' } } 1
            .progress-steps--step{ ng: { click: 'gotoStep(1)', class: '{ "is-active": isStep(1) || isStep(2) }' } } 2
            .progress-steps--step{ ng: { class: '{ "is-active": isStep(2) }' } } 3

    %section.donation-form.section
        .container-fluid
            .row
                .col-md-6.col-md-offset-3.col-sm-8.col-sm-offset-2
                    %section{ ng: { show: 'isStep(0)' } }
                        %h2.donation-form--header Select an amount
                        .row
                            .col-xs-6.col-sm-3
                                %button.donation-form--amount.btn{ ng: { class: "{ 'is-selected': form.amountType === 'option' && form.amountValue === 25 }",
                                                                         click: 'selectAmountOption(25)' } } $25
                            .col-xs-6.col-sm-3
                                %button.donation-form--amount.btn{ ng: { class: "{ 'is-selected': form.amountType === 'option' && form.amountValue === 50 }",
                                                                         click: 'selectAmountOption(50)' } } $50
                            .col-xs-6.col-sm-3
                                %button.donation-form--amount.btn{ ng: { class: "{ 'is-selected': form.amountType === 'option' && form.amountValue === 100 }",
                                                                         click: 'selectAmountOption(100)' } } $100
                            .col-xs-6.col-sm-3
                                %input.donation-form--custom-amount.form-control.is-empty{ type: 'text', placeholder: '$ Other',
                                                                                           ng: { class: "{ 'is-empty': form.amountType !== 'custom' }",
                                                                                                 model: 'form.amountCustom',
                                                                                                 change: 'updateCustomAmount()' } }
                        .donation-form--amount-options.row
                            .col-xs-12
                                .checkbox
                                    %input{ id: 'donation-form--dedicated', type: 'checkbox', ng: { model: 'form.behalfSelected', change: 'updateBehalfSelection()' } }
                                    %label{ for: 'donation-form--dedicated' }
                                        Dedicate this donation
                                        %span.donation-form--dedication-info.hint--top{ data: { hint: 'Add dedication information to your donation' } }
                                            %span.geomicon-info-2
                                .checkbox
                                    %input{ id: 'donation-form--recurring', type: 'checkbox', ng: { model: 'form.chargeType', true_value: 'recurring', false_value: 'once' } }
                                    %label{ for: 'donation-form--recurring' }
                                        Make this a monthly recurring donation
                                        %span.donation-form--recurring-info.hint--top{ data: { hint: 'You can discontinue your donation from a monthly email receipt.' } }
                                            %span.geomicon-info-2
                        .donation-form--continue.row
                            .col-xs-12
                                %button.btn.btn-secondary.btn-secondary_pill{ ng: { click: 'gotoStep(1); jump("start")' } }<
                                    Continue
                                    %span.geomicon-arrow-right<>

                    %section{ ng: { cloak: '', show: 'isStep(1)' } }
                        %h2.donation-form--header Payment Info

                        .form-inline
                            .form-group.col-sm-6
                                %input.form-control{ type: 'text',
                                                     placeholder: 'First Name',
                                                     ng: { model: 'form.donorFirstName',
                                                           class: '{ "is-filled": form.donorFirstName, "has-errors": errorField(requireField, form.donorFirstName) }' } }
                                %label {[{ errorFieldLabel(requireField, form.donorFirstName, 'First Name') }]}
                            .form-group.col-sm-6
                                %input.form-control{ type: 'text',
                                                     placeholder: 'Last Name',
                                                     ng: { model: 'form.donorLastName',
                                                           class: '{ "is-filled": form.donorLastName, "has-errors": errorField(requireField, form.donorLastName) }' } }
                                %label {[{ errorFieldLabel(requireField, form.donorLastName, 'Last Name') }]}
                        .form-inline
                            .form-group.col-sm-12
                                %input.form-control{ type: 'text',
                                                     placeholder: 'Email Address',
                                                     ng: { model: 'form.donorEmail',
                                                           class: '{ "is-filled": form.donorEmail, "has-errors": errorField(requireEmailField, form.donorEmail) }' } }
                                %label {[{ errorFieldLabel(requireEmailField, form.donorEmail, 'Email Address') }]}
                        .form-inline
                            .form-group.col-sm-6
                                %input.form-control{ type: 'text',
                                                     placeholder: 'Card Number',
                                                     ui_mask: '9999  9999  9999  9999',
                                                     ui_mask_placeholder: '––––  ––––  ––––  ––––',
                                                     ng: { model: 'card.number',
                                                           class: '{ "is-filled": card.number, "has-errors": errorField(requireField, card.number) }' } }
                                %label {[{ errorFieldLabel(requireField, card.number, 'Card Number') }]}
                            .form-group.col-sm-2
                                %input.form-control{ type: 'text',
                                                     placeholder: 'MM / YY',
                                                     ui_mask: '99 / 99',
                                                     ui_mask_placeholder: '–– / ––',
                                                     ng: { model: 'card.expiration',
                                                           class: '{ "is-filled": card.expiration, "has-errors": errorField(requireField, card.expiration) }' } }
                                %label {[{ errorFieldLabel(requireField, card.expiration, 'MM / YY') }]}
                            .form-group.col-sm-4
                                %input.form-control{ type: 'text',
                                                     placeholder: 'Security Code',
                                                     ng: { model: 'card.cvc',
                                                           class: '{ "is-filled": card.cvc, "has-errors": errorField(requireField, card.cvc) }',
                                                           change: 'updateCardCvc("{[{ card.cvc }]}")' } }
                                %label {[{ errorFieldLabel(requireField, card.cvc, 'Security Code') }]}
                        .form-inline
                            .form-group.col-sm-12
                                %input.form-control{ type: 'text',
                                                     ui_mask: '99999',
                                                     ui_mask_placeholder: '–––––',
                                                     placeholder: 'Billing Zip Code',
                                                     ng: { model: 'form.donorZip',
                                                           class: '{ "is-filled": form.donorZip, "has-errors": errorField(requireField, form.donorZip) }' } }
                                %label {[{ errorFieldLabel(requireField, form.donorZip, 'Billing Zip Code') }]}

                        %div{ ng: { show: 'form.behalfSelected' } }
                            %h2.donation-form--header Dedication Info
                            .row
                                .col-sm-4
                                    .checkbox{ ng: { click: 'form.behalfOtherType = ""' } }
                                        %input{ id: 'donation-form--honor-behalf', type: 'radio', value: 'honor', ng: { model: 'form.behalfType' } }
                                        %label{ for: 'donation-form--honor-behalf' } In honor of
                                .col-sm-4
                                    .checkbox{ ng: { click: 'form.behalfOtherType = ""' } }
                                        %input{ id: 'donation-form--memory-behalf', type: 'radio', value: 'memory', ng: { model: 'form.behalfType' } }
                                        %label{ for: 'donation-form--memory-behalf' } In memory of
                                .col-sm-4.col-xs-5
                                    .checkbox.with-input
                                        %input{ id: 'donation-form--other-behalf', type: 'radio', value: 'other', ng: { model: 'form.behalfType' } }
                                        %label{ for: 'donation-form--other-behalf' } &nbsp;
                                    %input.form-control.donation-form--other-behalf-input{ for: 'donation-form--other-behalf',
                                                                                           type: 'text', placeholder: 'Other',
                                                                                           ng: { model: 'form.behalfOtherType',
                                                                                                 click: 'form.behalfType = "other"',
                                                                                                 class: '{ "is-filled": form.behalfOtherType }' } }
                            .form-inline
                                .donation-form--behalf-name-container.form-group.col-sm-12
                                    %input.form-control{ type: 'text',
                                                         placeholder: 'Dedicatee Name',
                                                        ng: { model: 'form.behalfName',
                                                              class: '{ "is-filled": form.behalfName, "has-errors": errorField(requireField, form.behalfName) }' } }
                                    %label {[{ errorFieldLabel(requireField, form.behalfName, 'Dedicatee Name') }]}

                            %h2.donation-form--header Would you like us to notify someone?
                            .row
                                .col-sm-4
                                    .checkbox
                                        %input{ id: 'donation-form--none-notify', type: 'radio', value: 'none', ng: { model: 'form.notifyType' } }
                                        %label{ for: 'donation-form--none-notify' } No notification
                                .col-sm-4
                                    .checkbox
                                        %input{ id: 'donation-form--email-notify', type: 'radio', value: 'email', ng: { model: 'form.notifyType' } }
                                        %label{ for: 'donation-form--email-notify' } Send email
                                .col-sm-4
                                    .checkbox
                                        %input{ id: 'donation-form--letter-notify', type: 'radio', value: 'letter', ng: { model: 'form.notifyType' } }
                                        %label{ for: 'donation-form--letter-notify' } Send letter
                            %div{ ng: { hide: 'form.notifyType === "none"' } }
                                .form-inline
                                    .form-group.col-sm-12
                                        %input.form-control{ type: 'text',
                                                             placeholder: 'Full name of person to notify',
                                                             ng: { model: 'form.notifyName',
                                                                   class: '{ "is-filled": form.notifyName, "has-errors": errorField(requireField, form.notifyName) }' } }
                                        %label {[{ errorFieldLabel(requireField, form.notifyName, 'Full name of person to notify') }]}

                                .donation-form--notify-details{ ng: { show: 'form.notifyType === "email"' } }
                                    .form-inline
                                        .form-group.col-sm-12
                                            %input.form-control{ type: 'text',
                                                                 placeholder: 'Email Address',
                                                                 ng: { model: 'form.notifyEmail',
                                                                       class: '{ "is-filled": form.notifyEmail, "has-errors": errorField(requireEmailField, form.notifyEmail) }' } }
                                            %label {[{ errorFieldLabel(requireEmailField, form.notifyEmail, 'Email Address') }]}

                                .donation-form--notify-details{ ng: { show: 'form.notifyType === "letter"' } }
                                    .form-inline
                                        .form-group.col-sm-6
                                            %input.form-control{ type: 'text',
                                                                 placeholder: 'Address',
                                                                 ng: { model: 'form.notifyAddress1',
                                                                       class: '{ "is-filled": form.notifyAddress1, "has-errors": errorField(requireField, form.notifyAddress1) }' } }
                                            %label {[{ errorFieldLabel(requireField, form.notifyAddress1, 'Address') }]}
                                        .form-group.col-sm-6
                                            %input.form-control{ type: 'text',
                                                                 placeholder: 'Apt / Suite',
                                                                ng: { model: 'form.notifyAddress2',
                                                                      class: '{ "is-filled": form.notifyAddress2 }' } }
                                            %label Apt / Suite
                                    .form-inline
                                        .form-group.col-sm-6
                                            %input.form-control{ type: 'text',
                                                                 placeholder: 'City',
                                                                 ng: { model: 'form.notifyCity',
                                                                       class: '{ "is-filled": form.notifyCity, "has-errors": errorField(requireField, form.notifyCity) }' } }
                                            %label {[{ errorFieldLabel(requireField, form.notifyCity, 'City') }]}
                                        .form-group.col-sm-3
                                            %input.form-control{ type: 'text',
                                                                 ui_mask: 'AA',
                                                                 ui_mask_placeholder: '––',
                                                                 placeholder: 'State',
                                                                 ng: { model: 'form.notifyState',
                                                                       class: '{ "is-filled": form.notifyState, "has-errors": errorField(requireField, form.notifyState) }' } }
                                            %label {[{ errorFieldLabel(requireField, form.notifyState, 'State') }]}
                                        .form-group.col-sm-3
                                            %input.form-control{ type: 'text',
                                                                 ui_mask: '99999',
                                                                 ui_mask_placeholder: '–––––',
                                                                 placeholder: 'Zip Code',
                                                                 ng: { model: 'form.notifyZip',
                                                                       class: '{ "is-filled": form.notifyZip, "has-errors": errorField(requireField, form.notifyZip) }' } }
                                            %label {[{ errorFieldLabel(requireField, form.notifyZip, 'Zip Code') }]}

                        .donation-form--continue.row
                            .col-xs-12
                                %button.btn.btn-secondary.btn-secondary_pill{ ng: { click: 'submit()', disabled: 'form.submitting' } }<
                                    {[{ form.submitting ? 'Completing' : 'Complete' }]} your {[{ form.chargeType === 'recurring' ? ' monthly ' : '' }]} donation of ${[{ donationAmount() / 100 }]}
                                    %span.geomicon-arrow-right{ ng: { hide: 'form.submitting' } }<>
                                    %span{ ng: { show: 'form.submitting' } }<> &nbsp;.&nbsp;.&nbsp;.

                        .alert.alert-danger{ ng: { show: 'form.hasErrors' } } {[{ errorMessage }]}

                    %section.donation-form--complete{ ng: { cloak: '', show: 'isStep(2)' } }
                        %h1 Thank you for your {[{ form.chargeType === 'recurring' ? ' monthly ' : '' }]} gift of ${[{ donationAmount() / 100 }]}!
                        %h2
                            We’ve sent an email confirmation of your donation to
                            %br
                            %strong {[{ form.donorEmail }]}.
                            %span{ ng: { if: 'form.chargeType === "recurring"' } }
                                Each month you’ll receive an email after your donation of ${[{ donationAmount() / 100 }]} is processed. You can cancel your recurring donation from that receipt.
                            %span{ ng: { if: 'form.notifyType === "letter"' } }
                                We’ll also send a letter to notify
                                %strong> &nbsp;{[{ form.notifyName }]}&nbsp;
                                of your donation, at the following address:
                            %span{ ng: { if: 'form.notifyType === "email"' } }
                                We’ll also send an email to notify
                                %strong> &nbsp;{[{ form.notifyName }]}&nbsp;
                                of your donation, at
                                %strong> &nbsp;{[{ form.notifyEmail }]}.
                        .donation-form--notify-address{ ng: { if: 'form.notifyType === "letter"' } }
                            .donation-form--notify-address1 {[{ form.notifyAddress1 }]}
                            .donation-form--notify-address2{ ng: { if: 'form.notifyAddress2' } } {[{ form.notifyAddress2 }]}
                            .donation-form--notify-address3 {[{ form.notifyCity }]}, {[{ form.notifyState }]} {[{ form.notifyZip }]}
                        {{ entry.donationQuote }}
                        .donation-form--share-links
                            .row
                                .col-xs-6
                                    %button.btn.btn-secondary_pill.btn-facebook
                                        %svg{ viewbox: '0 0 512 512' }
                                            %use{ 'xlink:href' => '#facebook' }
                                        Share
                                        %span.hidden-xs on Facebook
                                .col-xs-6
                                    %a.btn.btn-secondary_pill.btn-twitter{ ng: { href: 'https://twitter.com/home?status=I%20just%20donated%20${[{ donationAmount() / 100 }]}%20to%20the%20Southern%20Tier%20AIDS%20Program' }, target: '_blank' }
                                        %svg{ viewbox: '0 0 512 512' }
                                            %use{ 'xlink:href' => '#twitter' }
                                        Share
                                        %span.hidden-xs on Twitter
                        {{ entry.donationNote }}
{% endblock %}
